
#Область ПрограммныйИнтерфейс

// Читает CSV и возвращает массив массивов
//
// Параметры:
//  ЧтениеТекста - ЧтениеТекста - Объект ЧтениеТекста из файла CSV
//  Разделитель	 - Строка - Чем делить поля в CSV
// 
// Возвращаемое значение:
//  Массив из Массив из Строка - прочитанные значения
//
Функция ИзЧтенияТекста(Знач ЧтениеТекста, Знач Разделитель = ",") Экспорт
	
	массивСтрокФайла = Новый Массив;
	
	ПрочитаннаяСтрока = ЧтениеТекста.ПрочитатьСтроку();
	
	Пока Не ПрочитаннаяСтрока = Неопределено Цикл
		
		Если ПустаяСтрока(ПрочитаннаяСтрока) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		компонентыСтроки = ИзСтроки(ПрочитаннаяСтрока, Разделитель);
		
		массивСтрокФайла.Добавить(компонентыСтроки);
		
		ПрочитаннаяСтрока = ЧтениеТекста.ПрочитатьСтроку();
		
	КонецЦикла;
	
	Возврат массивСтрокФайла;
	
КонецФункции

// Читает строку CSV и возвращает массив строк, разбитый по разделителю
//
// Параметры:
//  СтрокаИсточник - Строка - Строка с данными CSV
//  Разделитель	 - Строка - Чем делить поля в CSV
// 
// Возвращаемое значение:
//  Массив из Строка - прочитанные значения
//
Функция ИзСтроки(Знач СтрокаИсточник, Знач Разделитель = ",") Экспорт
	
	компоненты = Новый Массив;
	
	Если СтрокаИсточник = "" Тогда
		
		Возврат компоненты;
		
	КонецЕсли;
	
	длинаРазделителя = СтрДлина(Разделитель);
	
	кавычки = Новый Структура;
	
	кавычки.Вставить("Варианты", Новый Массив);
	
	кавычки.Варианты.Добавить(ВариантКавычек(""""));
	кавычки.Варианты.Добавить(ВариантКавычек("'"));
	
	кавычки.Вставить("Отсутствуют", Ложь);
	кавычки.Вставить("Координаты", Новый Структура("Начало, Конец, Отсутствуют", 0, 0, Ложь));
	
	последнийРазделитель = 1; // Где был последний отрез
	текПозиция = 1; // указатель на разделитель или конец кавычки, до этого значения мы уже проанализиовали строку
	
	Пока Истина Цикл
		
		координатыКавычек = НайтиКавычки(СтрокаИсточник, кавычки, текПозиция);
		
		Если координатыКавычек.Отсутствуют
			И последнийРазделитель = текПозиция Тогда // Если нет накопленной строки с кавычками
			
			РазделитьОстатокСтроки(компоненты, СтрокаИсточник, Разделитель, текПозиция);
			
			Прервать;
			
		КонецЕсли;
		
		следующийРазделитель = СтрНайти(СтрокаИсточник, Разделитель, , текПозиция);
		
		Если следующийРазделитель = 0 Тогда
			
			// До конца строки больше нет разделителей, кладем весь остаток строки
			компоненты.Добавить(Сред(СтрокаИсточник, последнийРазделитель));
			Прервать;
			
		ИначеЕсли следующийРазделитель < координатыКавычек.Начало // разделитель до кавычек
			ИЛИ следующийРазделитель > координатыКавычек.Конец Тогда // или разделитель после кавычек
			
			компоненты.Добавить(Сред(СтрокаИсточник, последнийРазделитель, следующийРазделитель - последнийРазделитель));
			текПозиция = следующийРазделитель + длинаРазделителя;
			последнийРазделитель = текПозиция;
			
		ИначеЕсли следующийРазделитель > координатыКавычек.Начало
			И следующийРазделитель < координатыКавычек.Конец Тогда
			
			// Разделитель внутри кавычек, сдвигаемся на конец кавычек и продолжаем поиск
			текПозиция = координатыКавычек.Конец + 1;
			
		Иначе
			
			ВызватьИсключение "Что-то пошло не так, т.к. программист не учел эту ветку";
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат компоненты;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиКавычки(Знач СтрокаИсточник, ДанныеКавычек, ТекПозиция)
	
	координаты = ДанныеКавычек.Координаты;
	
	// Кеш. Возможно мы еще не дошли до кавычек, поэтому повторять поиск нет смысла
	Если координаты.Отсутствуют
		ИЛИ Координаты.Начало > ТекПозиция Тогда
		
		Возврат координаты;
		
	КонецЕсли;
	
	координаты.Начало = 0;
	координаты.Конец = 0;
	координаты.Отсутствуют = Истина;
	
	Для каждого цВариант Из ДанныеКавычек.Варианты Цикл
		
		Если цВариант.Отсутствует Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		начало = СтрНайти(СтрокаИсточник, цВариант.Строка, , текПозиция);
		
		Если начало = 0 Тогда
			
			цВариант.Отсутствует = Истина;
			Продолжить;
			
		КонецЕсли;
		
		Если координаты.Начало = 0
			ИЛИ (координаты.Начало > начало) Тогда // Одни кавычки могут перекрывать другие, поэтому ищем только первую
			
			координаты.Начало = начало;
			координаты.Конец = СтрНайти(СтрокаИсточник, цВариант.Строка, , текПозиция, 2);
			координаты.Отсутствуют = Ложь;
			
		КонецЕсли;

	КонецЦикла;
	
	Возврат координаты;
	
КонецФункции

Процедура РазделитьОстатокСтроки(Компоненты, Знач СтрокаИсточник, Знач Разделитель, Знач текПозиция)
	
	остатокСтроки = Сред(СтрокаИсточник, текПозиция);
	
	Для каждого цКомпонент Из СтрРазделить(остатокСтроки, Разделитель, Истина) Цикл
		
		компоненты.Добавить(цКомпонент);
		
	КонецЦикла;

КонецПроцедуры

Функция ВариантКавычек(Знач СтрокаКавычек)
	
	вариант = Новый Структура;
	вариант.Вставить("Отсутствует", Ложь);
	вариант.Вставить("Строка", СтрокаКавычек);
	вариант.Вставить("Начало", 0);
	вариант.Вставить("Конец", 0);
	
	Возврат вариант;

КонецФункции

#КонецОбласти